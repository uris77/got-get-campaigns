import com.eriwen.gradle.js.tasks.CombineJsTask

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "io.ratpack:ratpack-gradle:0.9.8"
    classpath "com.eriwen:gradle-js-plugin:1.12.1"
  }
}

apply plugin: "io.ratpack.ratpack-groovy"
apply plugin: "idea"
apply plugin: "eclipse"
apply plugin: "com.eriwen.gradle.js"

repositories {
  jcenter()
  maven { url "http://repo.springsource.org/repo" }
  maven { url "http://www.allanbank.com/repo" }
}

dependencies {
    //springloaded "org.springsource.loaded:springloaded:1.1.5.RELEASE"
    springloaded "org.springframework:springloaded:1.2.0.RELEASE"
    compile ratpack.dependency("pac4j")
    compile "org.pac4j:pac4j-openid:1.5.1"
    compile "org.pac4j:pac4j-oauth:1.5.1"

    compile ratpack.dependency("jackson")
    runtime 'org.slf4j:slf4j-simple:1.7.7'

    compile 'org.mongodb:mongo-java-driver:2.12.3'
    compile 'com.gmongo:gmongo:1.3'
    compile 'com.bloidonia:groovy-stream:0.5.4'
    compile "com.allanbank:mongodb-async-driver:2.0.0"

    testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
}

task stage{
    dependsOn installApp
}

javascript.source {
    dev {
        js {
            srcDir "assets/js"
            include "*.js"
            exclude "*.min.js"
        }
    }
    prod {
        js {
            srcDir "assets/js"
            include "*.min.js"
        }
    }
}

combineJs {
    source = javascript.source.dev.js.files
    dest = file("${buildDir}/all.js")
}

task concatJs(type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = [ "assets/js/vendor/underscore.js", "assets/js/vendor/angular-route.js", "assets/js/vendor/angular-ui-router.js",
        "assets/js/app/url_utils.js", "assets/js/app/utils.js",
        "assets/js/app/surveys_list.js", "assets/js//app/surveys_create.js", "assets/js/app/surveys.js",
        "assets/js/app/locations/create.js", "assets/js/app/locations/list.js", "assets/js/app/locations/details.js", "assets/js/app/locations/locations.js",
        "assets/js/app/non_traditional_outlets/gateway_service.js", "assets/js/app/non_traditional_outlets/list.js",
        "assets/js/app/non_traditional_outlets/create.js",  "assets/js/app/non_traditional_outlets/edit.js",
        "assets/js/app/non_traditional_outlets/non_traditional_outlet_survey.js",
        "assets/js/app/hotspots/gateway_service.js", "assets/js/app/hotspots/list.js", "assets/js/app/hotspots/create.js",
        "assets/js/app/hotspots/edit.js", "assets/js/app/hotspots/hotspots_surveys.js",
        "assets/js/app/traditional_outlets/gateway_service.js", "assets/js/app/traditional_outlets/list.js",
        "assets/js/app/traditional_outlets/create.js", "assets/js/app/traditional_outlets/edit.js", "assets/js/app/traditional_outlets/traditional_outlet_survey.js",
        "assets/js/app/pasmo_crud_app.js"]

    dest = file("./src/ratpack/public/app/pasmo.js")

}

minifyJs {
    dependsOn concatJs
    source = "./src/ratpack/public/app/pasmo.js"
    dest = file("./src/ratpack/public/app/pasmo-min.js")
    closure {
        warningLevel = 'QUIET'
    }
}

gzipJs {
    dependsOn minifyJs
    source = "./src/ratpack/public/app/pasmo-min.js"
    dest = file("./src/ratpack/public/app/pasmo-gzip.js")
}

run{
    Properties properties = new Properties(System.getProperties())
    try {
        FileInputStream inputStream = new FileInputStream(".env")
        properties.load(inputStream)
        System.setProperties(properties)
        System.getProperties().each { prop ->
            systemProperty prop.key, prop.value
        }
    }catch (FileNotFoundException ex) {
        println "Could not find env file"
        println "This is normal in production."
    } catch (Exception e) {
        e.printStackTrace()
    }

}
